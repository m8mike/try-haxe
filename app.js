// Generated by Haxe 3.3.0
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var App = function() { };
$hxClasses["App"] = App;
App.__name__ = ["App"];
App.main = function() {
	new Editor();
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,__class__: EReg
};
var Completion = function() { };
$hxClasses["Completion"] = Completion;
Completion.__name__ = ["Completion"];
Completion.registerHelper = function() {
	CodeMirror.registerHelper("hint","haxe",function(cm,options) {
		Completion.word = null;
		Completion.range = null;
		if(options != null && options.range != null) {
			Completion.range = options.range;
		} else if(Completion.RANGE != null) {
			Completion.range = Completion.RANGE;
		}
		Completion.getCurrentWord(cm,options,cm.getCursor());
		Completion.list = [];
		var _g = 0;
		var _g1 = Completion.completions;
		while(_g < _g1.length) {
			var completion = _g1[_g];
			++_g;
			Completion.list.push({ text : completion.n});
		}
		Completion.list = Filter.filter(Completion.list,Completion.curWord);
		var data = { list : Completion.list, from : { line : Completion.cur.line, ch : Completion.start}, to : { line : Completion.cur.line, ch : Completion.end}};
		return data;
	});
};
Completion.getCurrentWord = function(cm,options,pos) {
	if(options != null && options.word != null) {
		Completion.word = options.word;
	} else if(Completion.WORD != null) {
		Completion.word = Completion.WORD;
	}
	if(pos != null) {
		Completion.cur = pos;
	}
	var curLine = cm.getLine(Completion.cur.line);
	Completion.start = Completion.cur.ch;
	Completion.end = Completion.start;
	while(Completion.end < curLine.length && Completion.word.match(curLine.charAt(Completion.end))) ++Completion.end;
	while(Completion.start > 0 && Completion.word.match(curLine.charAt(Completion.start - 1))) --Completion.start;
	Completion.curWord = null;
	if(Completion.start != Completion.end) {
		Completion.curWord = curLine.substring(Completion.start,Completion.end);
	}
	return Completion.curWord;
};
var Editor = function() {
	var _gthis = this;
	this.markers = [];
	this.lineHandles = [];
	CodeMirror.commands.compile = function(_) {
		_gthis.compile();
	};
	CodeMirror.commands.togglefullscreen = $bind(this,this.toggleFullscreenSource);
	HaxeLint.load();
	this.haxeSource = CodeMirror.fromTextArea(js.JQuery("textarea[name='hx-source']")[0],{ mode : "haxe", lineWrapping : true, lineNumbers : true, extraKeys : { 'Ctrl-Space' : function(cm) {
		_gthis.autocomplete(cm);
	}, 'Ctrl-Enter' : "compile", 'F8' : "compile", 'F5' : "compile", 'F11' : "togglefullscreen"}, lint : true, matchBrackets : true, autoCloseBrackets : true, gutters : ["CodeMirror-linenumbers","CodeMirror-foldgutter","CodeMirror-lint-markers"], indentUnit : 4, tabSize : 4, keyMap : "sublime"});
	js_codemirror_ColorPreview.create(this.haxeSource);
	this.haxeSource.on("cursorActivity",function() {
		js_codemirror_ColorPreview.update(_gthis.haxeSource);
	});
	this.haxeSource.on("scroll",function() {
		js_codemirror_ColorPreview.scroll(_gthis.haxeSource);
	});
	Completion.registerHelper();
	this.haxeSource.on("change",$bind(this,this.onChange));
	this.jsSource = CodeMirror.fromTextArea(js.JQuery("textarea[name='js-source']")[0],{ mode : "javascript", lineWrapping : true, lineNumbers : true, readOnly : true});
	this.embedSource = CodeMirror.fromTextArea(js.JQuery("textarea[name='embed-source']")[0],{ mode : "htmlmixed", lineWrapping : true, readonly : true});
	this.runner = js.JQuery("iframe[name='js-run']");
	this.messages = js.JQuery(".messages");
	this.compileBtn = js.JQuery(".compile-btn");
	this.libs = js.JQuery("#hx-options-form .hx-libs");
	this.targets = js.JQuery("#hx-options-form .hx-targets");
	this.stage = js.JQuery(".js-output .js-canvas");
	this.jsTab = js.JQuery("a[href='#js-source']");
	this.embedTab = js.JQuery("a[href='#embed-source']");
	this.embedPreview = js.JQuery("#embed-preview");
	this.mainName = js.JQuery("#hx-options-form input[name='main']");
	this.dceName = js.JQuery("#hx-options-form .hx-dce-name");
	this.analyzerName = js.JQuery("#hx-options-form .hx-analyzer-name");
	this.jsTab.hide();
	this.embedTab.hide();
	js.JQuery(".link-btn").bind("click",function(e) {
		if(js.JQuery(e.target).attr("href") == "#") {
			e.preventDefault();
		}
	});
	js.JQuery(".fullscreen-btn").bind("click",$bind(this,this.toggleFullscreenRunner));
	js.JQuery("a.hx-example").bind("click",$bind(this,this.toggleExampleClick));
	js.JQuery("body").bind("keyup",$bind(this,this.onKey));
	js.JQuery("a[data-toggle='tab']").bind("shown",function(e1) {
		_gthis.jsSource.refresh();
		_gthis.haxeSource.refresh();
		_gthis.embedSource.refresh();
	});
	this.dceName.delegate("input[name='dce']","change",$bind(this,this.onDce));
	this.analyzerName.delegate("input[name='analyzer']","change",$bind(this,this.onAnalyzer));
	this.targets.delegate("input[name='target']","change",$bind(this,this.onTarget));
	this.compileBtn.bind("click",$bind(this,this.compile));
	var apiRoot = js.JQuery("body").data("api");
	this.cnx = haxe_remoting_HttpAsyncConnection.urlConnect(apiRoot + "/compiler");
	this.program = { uid : null, main : { name : "Test", source : this.haxeSource.getValue()}, dce : "full", analyzer : "yes", target : api_Target.SWF("test",11.4), libs : []};
	this.initLibs();
	this.setTarget(api_Target.JS("test"));
	var uid = window.location.hash;
	if(uid.length > 0) {
		uid = HxOverrides.substr(uid,1,null);
		this.cnx.resolve("Compiler").resolve("getProgram").call([uid],$bind(this,this.onProgram));
	}
	window.addEventListener("resize",$bind(this,this.resize));
	this.resize();
};
$hxClasses["Editor"] = Editor;
Editor.__name__ = ["Editor"];
Editor.prototype = {
	resize: function(_) {
		this.setHeight(10);
		var win = window;
		js.JQuery(win.document.body);
		js.JQuery(".main");
		var h = win.innerHeight - 160;
		h -= js.JQuery(".foot").height();
		this.setHeight(Math.ceil(h));
	}
	,setHeight: function(h) {
		this.haxeSource.getScrollerElement().style.height = h + "px";
		this.haxeSource.getWrapperElement().style.height = h + "px";
		this.haxeSource.refresh();
		this.runner.height(h - 12);
		js.JQuery("#hx-options").height(h + 2);
		js.JQuery("#hx-about").height(h + 10);
	}
	,onDce: function(e) {
		var name = js.JQuery(e.target).val();
		switch(name) {
		case "full":case "no":case "std":
			this.setDCE(name);
			break;
		default:
		}
	}
	,setDCE: function(dce) {
		this.program.dce = dce;
		js.JQuery("input[name='dce'][value='" + dce + "']").attr("checked","checked");
	}
	,onAnalyzer: function(e) {
		var name = js.JQuery(e.target).val();
		switch(name) {
		case "no":case "yes":
			this.setAnalyzer(name);
			break;
		default:
		}
	}
	,setAnalyzer: function(analyzer) {
		this.program.analyzer = analyzer;
		js.JQuery("input[name='analyzer'][value='" + analyzer + "']").attr("checked","checked");
	}
	,toggleExampleClick: function(e) {
		var _gthis = this;
		var _this = js.JQuery(e.target);
		var ajax = $.ajax;
		ajax({ url : "examples/Example-" + Std.string(_this.data("value")) + ".hx", dataType : "text"}).done(function(data) {
			_gthis.haxeSource.setValue(data);
			js.JQuery("input[name='main']").val("Test");
		});
		e.preventDefault();
	}
	,fullscreen: function() {
		var el = window.document.documentElement;
            var rfs = el.requestFullScreen
                || el.webkitRequestFullScreen
                || el.mozRequestFullScreen;
              rfs.call(el); ;
	}
	,toggleFullscreenRunner: function(e) {
		var _this = js.JQuery(e.target);
		e.preventDefault();
		if(_this.attr("href") != "#") {
			js.JQuery("body").addClass("fullscreen-runner");
			this.fullscreen();
		}
	}
	,toggleFullscreenSource: function(_) {
		js.JQuery("body").toggleClass("fullscreen-source");
		this.haxeSource.refresh();
		this.fullscreen();
	}
	,onTarget: function(e) {
		var name = js.JQuery(e.target).val();
		var target = name == "SWF"?api_Target.SWF("test",11.4):api_Target.JS("test");
		if(name == "SWF") {
			js.JQuery("#output").click();
		}
		this.setTarget(target);
	}
	,setTarget: function(target) {
		this.program.target = target;
		this.libs.find(".controls").hide();
		var sel = target[0];
		switch(target[1]) {
		case 0:
			break;
		case 1:
			this.jsTab.hide();
			break;
		}
		js.JQuery("input[name='target'][value='" + sel + "']").attr("checked","checked");
		this.libs.find("." + sel + "-libs").fadeIn();
	}
	,initLibs: function() {
		var _g = 0;
		var _g1 = api_Target.__constructs__.slice();
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			var el = this.libs.find("." + t + "-libs");
			var libs = Libs.getLibsConfig(null,t);
			var def = Libs.getDefaultLibs(null,t);
			if(def == null) {
				def = [];
			}
			var _g2 = 0;
			while(_g2 < libs.length) {
				var l = libs[_g2];
				++_g2;
				el.append("<label class=\"checkbox\"><input class=\"lib\" type=\"checkbox\" value=\"" + l.name + "\"" + (Lambda.has(def,l.name)?"checked='checked'":"") + (" /> " + l.name) + "<span class='help-inline'><a href='" + (l.help == null?"http://lib.haxe.org/p/" + l.name:l.help) + "' target='_blank'><i class='icon-question-sign'></i></a></span>" + "</label>");
			}
		}
	}
	,onProgram: function(p) {
		if(p != null) {
			this.program = p;
			this.program.uid = null;
			this.haxeSource.setValue(this.program.main.source);
			this.setTarget(this.program.target);
			this.setDCE(this.program.dce);
			this.setAnalyzer(this.program.analyzer);
			if(this.program.libs != null) {
				var _this = this.libs.find("input.lib");
				var tmp = (_this.iterator)();
				while(tmp.hasNext()) {
					var lib = tmp.next();
					if(Lambda.has(this.program.libs,lib.val())) {
						lib.attr("checked","checked");
					} else {
						lib.removeAttr("checked");
					}
				}
			}
			this.mainName.val(this.program.main.name);
		}
	}
	,autocomplete: function(cm) {
		var _gthis = this;
		this.clearErrors();
		this.messages.fadeOut(0);
		this.updateProgram();
		var src = cm.getValue();
		var idx = SourceTools.getAutocompleteIndex(src,cm.getCursor());
		if(idx == null) {
			return;
		}
		this.completionIndex = idx;
		if(src.length > 1000) {
			this.program.main.source = src.substring(0,this.completionIndex + 1);
		}
		this.cnx.resolve("Compiler").resolve("autocomplete").call([this.program,idx],function(comps) {
			_gthis.displayCompletions(cm,comps);
		});
	}
	,displayCompletions: function(cm,comps) {
		this.completions = null;
		if(comps.list != null) {
			this.completions = comps.list;
			Completion.completions = [];
			var _g = 0;
			var _g1 = this.completions;
			while(_g < _g1.length) {
				var completion = _g1[_g];
				++_g;
				Completion.completions.push({ n : completion});
			}
			cm.execCommand("autocomplete");
		}
		if(comps.type != null) {
			console.log(comps.type);
			var pos = cm.getCursor();
			var end = { line : pos.line, ch : pos.ch + comps.type.length};
			cm.replaceRange(comps.type,pos,pos);
			cm.setSelection(pos,end);
		}
		if(comps.errors != null) {
			this.messages.html("<div class='alert alert-error'><h4 class='alert-heading'>Completion error</h4><div class='message'></div></div>");
			var _g2 = 0;
			var _g11 = comps.errors;
			while(_g2 < _g11.length) {
				var m = _g11[_g2];
				++_g2;
				this.messages.find(".message").append(js.JQuery("<div>").text(m));
			}
			this.messages.fadeIn();
			this.markErrors(comps.errors);
		}
	}
	,onKey: function(e) {
		if(e.keyCode == 122) {
			var b = js.JQuery("body");
			if(b.hasClass("fullscreen-runner")) {
				b.removeClass("fullscreen-runner");
			}
		}
		if(e.ctrlKey && e.keyCode == 13 || e.keyCode == 119) {
			e.preventDefault();
			this.compile(e);
		}
	}
	,onChange: function(cm,e) {
		var txt = e.text[0];
		if(StringTools.endsWith(StringTools.trim(txt),".") || StringTools.endsWith(StringTools.trim(txt),"()")) {
			this.autocomplete(this.haxeSource);
		}
	}
	,compile: function(e) {
		if(e != null) {
			e.preventDefault();
		}
		this.messages.fadeOut(0);
		this.clearErrors();
		this.compileBtn.button("loading");
		this.updateProgram();
		this.cnx.resolve("Compiler").resolve("compile").call([this.program],$bind(this,this.onCompile));
	}
	,updateProgram: function() {
		this.program.main.source = this.haxeSource.getValue();
		this.program.main.name = this.mainName.val();
		this.program.dce = js.JQuery("input[name='dce']:checked").val();
		this.program.analyzer = js.JQuery("input[name='analyzer']:checked").val();
		var libs = [];
		var inputs = js.JQuery("#hx-options .hx-libs ." + this.program.target[0] + "-libs input.lib:checked");
		var tmp = (inputs.iterator)();
		while(tmp.hasNext()) libs.push(tmp.next().val());
		this.program.libs = libs;
	}
	,run: function() {
		if(this.output.success) {
			var run = this.output.href;
			this.runner.attr("src",run + "?r=" + Std.string(Math.random()));
			js.JQuery(".link-btn, .fullscreen-btn").button("reset").attr("href",run + "?r=" + Std.string(Math.random()));
		} else {
			this.runner.attr("src","about:blank");
			js.JQuery(".link-btn, .fullscreen-btn").addClass("disabled").attr("href","#");
		}
	}
	,onCompile: function(o) {
		this.output = o;
		this.program.uid = this.output.uid;
		window.location.hash = "#" + this.output.uid;
		this.jsSource.setValue(this.output.source);
		this.embedSource.setValue(this.output.embed);
		this.embedPreview.html(this.output.embed);
		if(this.output.embed != "" && this.output.embed != null) {
			this.embedTab.show();
		} else {
			this.embedTab.hide();
		}
		var jsSourceElem = js.JQuery(this.jsSource.getWrapperElement());
		var msg = [];
		var msgType = "";
		if(this.output.success) {
			msgType = "success";
			jsSourceElem.show();
			this.jsSource.refresh();
			this.stage.show();
			if(this.program.target[1] == 0) {
				this.jsTab.show();
			} else {
				this.jsTab.hide();
			}
		} else {
			msg = SourceTools.splitLines(this.output.stderr);
			msgType = "error";
			this.stage.hide();
			this.jsTab.hide();
			jsSourceElem.hide();
			this.markErrors(this.output.errors);
		}
		this.messages.html("<div class='alert alert-" + msgType + "'><h4 class='alert-heading'>" + this.output.message + "</h4><div class='message'></div></div>");
		var _g = 0;
		while(_g < msg.length) {
			var m = msg[_g];
			++_g;
			this.messages.find(".message").append(js.JQuery("<div>").text(m));
		}
		if(this.output.success && this.output.stderr != null) {
			this.messages.append(js.JQuery("<pre>").text(this.output.stderr));
		}
		this.messages.fadeIn();
		this.compileBtn.button("reset");
		this.run();
	}
	,clearErrors: function() {
		HaxeLint.data = [];
		HaxeLint.updateLinting(this.haxeSource);
	}
	,markErrors: function(errors) {
		HaxeLint.data = [];
		var errLine = new EReg("([^:]*):([0-9]+): characters ([0-9]+)-([0-9]+) :(.*)","g");
		var _g = 0;
		while(_g < errors.length) {
			var e = errors[_g];
			++_g;
			if(errLine.match(e)) {
				var err_file = errLine.matched(1);
				var err_line = Std.parseInt(errLine.matched(2)) - 1;
				var err_from = Std.parseInt(errLine.matched(3));
				var err_to = Std.parseInt(errLine.matched(4));
				var err_msg = errLine.matched(5);
				if(StringTools.trim(err_file) == "Test.hx") {
					HaxeLint.data.push({ from : { line : err_line, ch : err_from}, to : { line : err_line, ch : err_to}, message : err_msg, severity : "error"});
				}
			}
		}
		HaxeLint.updateLinting(this.haxeSource);
	}
	,__class__: Editor
};
var Filter = function() { };
$hxClasses["Filter"] = Filter;
Filter.__name__ = ["Filter"];
Filter.filter = function(completions,word) {
	var list = [];
	if(word != null) {
		var filtered_results = [];
		var sorted_results = [];
		word = word.toLowerCase();
		var _g = 0;
		while(_g < completions.length) {
			var completion = completions[_g];
			++_g;
			var n = completion.text.toLowerCase();
			var b = true;
			var _g2 = 0;
			var _g1 = word.length;
			while(_g2 < _g1) if(n.indexOf(word.charAt(_g2++)) == -1) {
				b = false;
				break;
			}
			if(b) {
				filtered_results.push(completion);
			}
		}
		var results = [];
		var filtered_results2 = [];
		var exactResults = [];
		var _g11 = 0;
		var _g3 = filtered_results.length;
		while(_g11 < _g3) {
			var i = _g11++;
			var str = filtered_results[i].text.toLowerCase();
			var index = str.indexOf(word);
			if(word == str) {
				exactResults.push(filtered_results[i]);
			} else if(index == 0) {
				sorted_results.push(filtered_results[i]);
			} else if(index != -1) {
				filtered_results2.push(filtered_results[i]);
			} else {
				results.push(filtered_results[i]);
			}
		}
		var _g4 = 0;
		while(_g4 < exactResults.length) {
			var completion1 = exactResults[_g4];
			++_g4;
			list.push(completion1);
		}
		var _g5 = 0;
		while(_g5 < sorted_results.length) {
			var completion2 = sorted_results[_g5];
			++_g5;
			list.push(completion2);
		}
		var _g6 = 0;
		while(_g6 < filtered_results2.length) {
			var completion3 = filtered_results2[_g6];
			++_g6;
			list.push(completion3);
		}
		var _g7 = 0;
		while(_g7 < results.length) {
			var completion4 = results[_g7];
			++_g7;
			list.push(completion4);
		}
	} else {
		list = completions;
	}
	return list;
};
var HaxeLint = function() { };
$hxClasses["HaxeLint"] = HaxeLint;
HaxeLint.__name__ = ["HaxeLint"];
HaxeLint.load = function() {
	CodeMirror.registerHelper("lint","haxe",function(text) {
		return HaxeLint.data;
	});
};
HaxeLint.updateLinting = function(cm) {
	cm.setOption("lint",false);
	cm.setOption("lint",true);
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) if(tmp.next() == elt) {
		return true;
	}
	return false;
};
Lambda.exists = function(it,f) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) if(f(tmp.next())) {
		return true;
	}
	return false;
};
Lambda.filter = function(it,f) {
	var l = new List();
	var tmp = $iterator(it)();
	while(tmp.hasNext()) {
		var x = tmp.next();
		if(f(x)) {
			l.add(x);
		}
	}
	return l;
};
var Libs = function() { };
$hxClasses["Libs"] = Libs;
Libs.__name__ = ["Libs"];
Libs.getLibsConfig = function(target,targetName) {
	var name = targetName != null?targetName:target[0];
	var _this = Libs.available;
	if(__map_reserved[name] != null?_this.existsReserved(name):_this.h.hasOwnProperty(name)) {
		var _this1 = Libs.available;
		return __map_reserved[name] != null?_this1.getReserved(name):_this1.h[name];
	} else {
		return [];
	}
};
Libs.getDefaultLibs = function(target,targetName) {
	var name = targetName != null?targetName:target[0];
	var _this = Libs.defaultChecked;
	if(__map_reserved[name] != null?_this.existsReserved(name):_this.h.hasOwnProperty(name)) {
		var _this1 = Libs.defaultChecked;
		return __map_reserved[name] != null?_this1.getReserved(name):_this1.h[name];
	} else {
		return [];
	}
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var SourceTools = function() { };
$hxClasses["SourceTools"] = SourceTools;
SourceTools.__name__ = ["SourceTools"];
SourceTools.splitLines = function(str) {
	return new EReg("[\n|\r|\r\n]","g").split(str);
};
SourceTools.indexToPos = function(src,idx) {
	var pos = { line : 0, ch : 0};
	var lines = SourceTools.splitLines(src);
	var _g = 0;
	while(_g < lines.length) {
		var l = lines[_g];
		++_g;
		if(idx >= l.length + 1) {
			idx -= l.length + 1;
			pos.line++;
		} else {
			pos.ch += idx;
			break;
		}
	}
	return pos;
};
SourceTools.posToIndex = function(src,pos) {
	var $char = 0;
	var lines = SourceTools.splitLines(src);
	var _g1 = 0;
	var _g = pos.line;
	while(_g1 < _g) $char += lines[_g1++].length + 1;
	$char += pos.ch;
	return $char;
};
SourceTools.getAutocompleteIndex = function(src,pos) {
	var charPos = SourceTools.posToIndex(src,pos);
	var charCode = HxOverrides.cca(src,charPos);
	var iniChar = charPos;
	while(40 != charCode && 44 != charCode && 46 != charCode) {
		--charPos;
		charCode = HxOverrides.cca(src,charPos);
		if(charPos < 0) {
			return null;
		}
	}
	++charPos;
	var skipped = src.substring(iniChar,charPos);
	if(new EReg("[^a-zA-Z0-9_\\s]","").match(skipped)) {
		return null;
	}
	return charPos;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var api_CompletionType = $hxClasses["api.CompletionType"] = { __ename__ : ["api","CompletionType"], __constructs__ : ["DEFAULT","TOP_LEVEL"] };
api_CompletionType.DEFAULT = ["DEFAULT",0];
api_CompletionType.DEFAULT.toString = $estr;
api_CompletionType.DEFAULT.__enum__ = api_CompletionType;
api_CompletionType.TOP_LEVEL = ["TOP_LEVEL",1];
api_CompletionType.TOP_LEVEL.toString = $estr;
api_CompletionType.TOP_LEVEL.__enum__ = api_CompletionType;
var api_Target = $hxClasses["api.Target"] = { __ename__ : ["api","Target"], __constructs__ : ["JS","SWF"] };
api_Target.JS = function(name) { var $x = ["JS",0,name]; $x.__enum__ = api_Target; $x.toString = $estr; return $x; };
api_Target.SWF = function(name,version) { var $x = ["SWF",1,name,version]; $x.__enum__ = api_Target; $x.toString = $estr; return $x; };
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
	this.withCredentials = false;
};
$hxClasses["haxe.Http"] = haxe_Http;
haxe_Http.__name__ = ["haxe","Http"];
haxe_Http.prototype = {
	setHeader: function(header,value) {
		this.headers = Lambda.filter(this.headers,function(h) {
			return h.header != header;
		});
		this.headers.push({ header : header, value : value});
		return this;
	}
	,setParameter: function(param,value) {
		this.params = Lambda.filter(this.params,function(p) {
			return p.param != param;
		});
		this.params.push({ param : param, value : value});
		return this;
	}
	,request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && "undefined" !== typeof window) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				me.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					me.req = null;
					me.onError("Unknown host");
					break;
				case 12029:
					me.req = null;
					me.onError("Failed to connect to host");
					break;
				default:
					me.req = null;
					me.responseData = r.responseText;
					me.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g_head = this.params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				uri += encodeURIComponent(p.param) + "=" + encodeURIComponent(p.value);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question?"?":"&") + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g_head1 = this.headers.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var h1 = val1;
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,__class__: haxe_Http
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var _this = this.shash;
		var x = __map_reserved[s] != null?_this.getReserved(s):_this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null?"null":"" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,value);
		} else {
			_this1.h[s] = value;
		}
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null?"null":"" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null?"null":"" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g[1]) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null?"null":"" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) {
				this.buf.b += "k";
			} else if(!isFinite(v2)) {
				this.buf.b += v2 < 0?"m":"p";
			} else {
				this.buf.b += "d";
				this.buf.b += v2 == null?"null":"" + v2;
			}
			break;
		case 3:
			this.buf.b += v?"t":"f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = Type.getClassName(v);
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(Type.getEnumName(v));
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
			break;
		case 6:
			var c = _g[2];
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v.length;
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null?"null":"" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null?"null":"" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case List:
				this.buf.b += "l";
				var v3 = v;
				var _g_head = v3.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					this.serialize(val);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v4 = v;
				var tmp = v4.keys();
				while(tmp.hasNext()) {
					var k = tmp.next();
					this.buf.b += ":";
					this.buf.b += k == null?"null":"" + k;
					this.serialize(v4.h[k]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v5 = v;
				var tmp1 = v5.keys();
				while(tmp1.hasNext()) {
					var k1 = tmp1.next();
					var id = Reflect.field(k1,"__id__");
					Reflect.deleteField(k1,"__id__");
					this.serialize(k1);
					k1.__id__ = id;
					this.serialize(v5.h[k1.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v6 = v;
				var tmp2 = v6.keys();
				while(tmp2.hasNext()) {
					var k2 = tmp2.next();
					this.serializeString(k2);
					this.serialize(__map_reserved[k2] != null?v6.getReserved(k2):v6.h[k2]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v7 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));
				this.buf.b += ":";
				var i1 = 0;
				var max = v7.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var length = haxe_Serializer.BASE64.length;
					b64 = new Array(length);
					var _g11 = 0;
					var _g3 = haxe_Serializer.BASE64.length;
					while(_g11 < _g3) {
						var i2 = _g11++;
						b64[i2] = HxOverrides.cca(haxe_Serializer.BASE64,i2);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i1 < max) {
					var b1 = v7.b[i1++];
					var b2 = v7.b[i1++];
					var b3 = v7.b[i1++];
					this.buf.b += String.fromCharCode(b64[b1 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCharCode(b64[b3 & 63]);
				}
				if(i1 == max) {
					var b11 = v7.b[i1++];
					var b21 = v7.b[i1++];
					this.buf.b += String.fromCharCode(b64[b11 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b11 << 4 | b21 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[b21 << 2 & 63]);
				} else if(i1 == max + 1) {
					var b12 = v7.b[i1++];
					this.buf.b += String.fromCharCode(b64[b12 >> 2]);
					this.buf.b += String.fromCharCode(b64[b12 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex?"j":"w");
			this.serializeString(Type.getEnumName(_g[2]));
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v[1]);
			} else {
				this.serializeString(v[0]);
			}
			this.buf.b += ":";
			var l1 = v.length;
			this.buf.b += Std.string(l1 - 2);
			var _g12 = 2;
			var _g4 = l1;
			while(_g12 < _g4) this.serialize(v[_g12++]);
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe","_Unserializer","DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return Type.resolveClass(name);
	}
	,resolveEnum: function(name) {
		return Type.resolveEnum(name);
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		var x = HxOverrides.substr(this.buf,p1,this.pos - p1);
		return parseFloat(x);
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			o[k] = this.unserialize();
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Type.createEmptyInstance(cl1);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) h.set(this.unserialize(),this.unserialize());
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s] != null) {
					h1.setReserved(s,value);
				} else {
					h1.h[s] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Type.createEmptyInstance(cl2);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s1 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s1 = decodeURIComponent(s1.split("+").join(" "));
			this.scache.push(s1);
			return s1;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.prototype = {
	__class__: haxe_io_Bytes
};
var haxe_remoting_AsyncConnection = function() { };
$hxClasses["haxe.remoting.AsyncConnection"] = haxe_remoting_AsyncConnection;
haxe_remoting_AsyncConnection.__name__ = ["haxe","remoting","AsyncConnection"];
haxe_remoting_AsyncConnection.prototype = {
	__class__: haxe_remoting_AsyncConnection
};
var haxe_remoting_HttpAsyncConnection = function(data,path) {
	this.__data = data;
	this.__path = path;
};
$hxClasses["haxe.remoting.HttpAsyncConnection"] = haxe_remoting_HttpAsyncConnection;
haxe_remoting_HttpAsyncConnection.__name__ = ["haxe","remoting","HttpAsyncConnection"];
haxe_remoting_HttpAsyncConnection.__interfaces__ = [haxe_remoting_AsyncConnection];
haxe_remoting_HttpAsyncConnection.urlConnect = function(url) {
	return new haxe_remoting_HttpAsyncConnection({ url : url, error : function(e) {
		throw new js__$Boot_HaxeError(e);
	}},[]);
};
haxe_remoting_HttpAsyncConnection.prototype = {
	resolve: function(name) {
		var c = new haxe_remoting_HttpAsyncConnection(this.__data,this.__path.slice());
		c.__path.push(name);
		return c;
	}
	,call: function(params,onResult) {
		var h = new haxe_Http(this.__data.url);
		var s = new haxe_Serializer();
		s.serialize(this.__path);
		s.serialize(params);
		h.setHeader("X-Haxe-Remoting","1");
		h.setParameter("__x",s.toString());
		var error = this.__data.error;
		h.onData = function(response) {
			var ok = true;
			var ret;
			try {
				if(HxOverrides.substr(response,0,3) != "hxr") {
					throw new js__$Boot_HaxeError("Invalid response : '" + response + "'");
				}
				ret = new haxe_Unserializer(HxOverrides.substr(response,3,null)).unserialize();
			} catch( err ) {
				if (err instanceof js__$Boot_HaxeError) err = err.val;
				ret = null;
				ok = false;
				error(err);
			}
			if(ok && onResult != null) {
				onResult(ret);
			}
		};
		h.onError = error;
		h.request(true);
	}
	,__class__: haxe_remoting_HttpAsyncConnection
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class && o.__name__ != null) {
			return true;
		}
		if(cl == Enum && o.__ename__ != null) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
var js_bootstrap_Button = function() { };
$hxClasses["js.bootstrap.Button"] = js_bootstrap_Button;
js_bootstrap_Button.__name__ = ["js","bootstrap","Button"];
js_bootstrap_Button.button = function(j,state) {
	return j.button(state);
};
js_bootstrap_Button.buttonToggle = function(j) {
	return j.button("toggle");
};
js_bootstrap_Button.buttonLoading = function(j) {
	return j.button("loading");
};
js_bootstrap_Button.buttonReset = function(j) {
	return j.button("reset");
};
var js_codemirror_ColorPreview = function() { };
$hxClasses["js.codemirror.ColorPreview"] = js_codemirror_ColorPreview;
js_codemirror_ColorPreview.__name__ = ["js","codemirror","ColorPreview"];
js_codemirror_ColorPreview.create = function(cm) {
	js_codemirror_ColorPreview.preview = window.document.createElement("div");
	js_codemirror_ColorPreview.preview.className = "colorPreview";
	js_codemirror_ColorPreview.preview.style.display = "none";
	window.document.body.appendChild(js_codemirror_ColorPreview.preview);
	js_codemirror_ColorPreview.startScroll = cm.getScrollInfo();
};
js_codemirror_ColorPreview.update = function(cm) {
	var word = Completion.getCurrentWord(cm,{ word : new EReg("[A-Fx0-9#]+$","i")},cm.getCursor());
	var color = null;
	if(word != null && word.length > 2) {
		if(StringTools.startsWith(word,"0x")) {
			color = HxOverrides.substr(word,2,null);
		} else if(StringTools.startsWith(word,"#")) {
			color = HxOverrides.substr(word,1,null);
		}
		if(color != null) {
			js_codemirror_ColorPreview.startScroll = cm.getScrollInfo();
			var pos = cm.cursorCoords(null);
			js_codemirror_ColorPreview.top = pos.bottom;
			js_codemirror_ColorPreview.left = pos.left;
			js_codemirror_ColorPreview.preview.style.backgroundColor = "#" + color;
			var tmp = (pos.left == null?"null":"" + pos.left) + "px";
			var tmp1 = pos.bottom == null?"null":"" + pos.bottom;
			js.JQuery(js_codemirror_ColorPreview.preview).animate({ left : tmp, top : tmp1 + "px"});
			js.JQuery(js_codemirror_ColorPreview.preview).fadeIn();
		} else {
			js.JQuery(js_codemirror_ColorPreview.preview).fadeOut();
		}
	} else {
		js.JQuery(js_codemirror_ColorPreview.preview).fadeOut();
	}
};
js_codemirror_ColorPreview.scroll = function(cm) {
	if(js_codemirror_ColorPreview.preview.style.display != "none") {
		var curScroll = cm.getScrollInfo();
		var editor = cm.getWrapperElement().getBoundingClientRect();
		var newTop = js_codemirror_ColorPreview.top + js_codemirror_ColorPreview.startScroll.top - curScroll.top;
		var point = newTop - js.JQuery(window).scrollTop();
		if(point <= editor.top || point >= editor.bottom) {
			js.JQuery(js_codemirror_ColorPreview.preview).fadeOut();
			return;
		}
		js_codemirror_ColorPreview.preview.style.top = newTop + "px";
		js_codemirror_ColorPreview.preview.style.left = js_codemirror_ColorPreview.left + js_codemirror_ColorPreview.startScroll.left - curScroll.left + "px";
	}
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses.Math = Math;
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
var q = window.jQuery;
var js = js || {}
js.JQuery = q;
q.fn.iterator = function() {
	return { pos : 0, j : this, hasNext : function() {
		return this.pos < this.j.length;
	}, next : function() {
		return $(this.j[this.pos++]);
	}};
};
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
Completion.WORD = new EReg("[A-Z]+$","i");
Completion.RANGE = 500;
Completion.completions = [];
HaxeLint.data = [];
Libs.available = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = [{ name : "actuate"},{ name : "format"}];
		if(__map_reserved.JS != null) {
			_g.setReserved("JS",value);
		} else {
			_g.h["JS"] = value;
		}
	}
	{
		var value1 = [].concat([{ name : "actuate", args : []},{ name : "format"},{ name : "away3d", swf : { src : "away3d4.swf"}, help : "http://away3d.com/livedocs/away3d/4.0/"}]);
		if(__map_reserved.SWF != null) {
			_g.setReserved("SWF",value1);
		} else {
			_g.h["SWF"] = value1;
		}
	}
	$r = _g;
	return $r;
}(this));
Libs.defaultChecked = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = [];
		if(__map_reserved.JS != null) {
			_g.setReserved("JS",value);
		} else {
			_g.h["JS"] = value;
		}
	}
	{
		var value1 = [];
		if(__map_reserved.SWF != null) {
			_g.setReserved("SWF",value1);
		} else {
			_g.h["SWF"] = value1;
		}
	}
	$r = _g;
	return $r;
}(this));
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = { }.toString;
js_codemirror_ColorPreview.top = 0;
js_codemirror_ColorPreview.left = 0;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
App.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=app.js.map